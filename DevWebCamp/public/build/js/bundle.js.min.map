{"version":3,"sources":["horas.js","ponente.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","terminoBusqueda","e","target","name","value","horaPrevia","classList","remove","Object","values","includes","async","url","resultado","fetch","eventos","listadoHoras","forEach","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","addEventListener","seleccionarHora","obtenerHorasDisponibles","json","buscarEventos","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","eliminarTildes","texto","normalize","replace","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","id","obtenerPonentes","toLowerCase","length","firstChild","removeChild","ponenteHTML","createElement","textContent","onclick","appendChild","noResultado","mostrarPonentes","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function () {\r\n    const horas = document.querySelector('#horas');\r\n\r\n    if (horas) {\r\n        let busqueda = {\r\n            categoria_id: '',\r\n            dia: ''\r\n        }\r\n\r\n        const categoria = document.querySelector('[name=categoria_id]');\r\n        const dias = document.querySelectorAll('[name=dia]');\r\n        const inputHiddenDia = document.querySelector('[name=dia_id]');\r\n        const inputHiddenHora = document.querySelector('[name=hora_id]');\r\n\r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        dias.forEach(dia => dia.addEventListener('change', terminoBusqueda));\r\n\r\n        function terminoBusqueda(e) {\r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            // Reiniciar los campos ocultos y el selector de horas\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n\r\n            if(Object.values(busqueda).includes('')) {\r\n                return\r\n            }\r\n            \r\n            buscarEventos();\r\n        }\r\n\r\n        async function buscarEventos() {\r\n            const { dia, categoria_id } = busqueda;\r\n\r\n            const url = `/api/eventos-horarios?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n\r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos) {\r\n            // Reiniciar las horas\r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'));\r\n\r\n            // Comprobar eventos ya tomados\r\n            const horasTomadas = eventos.map(evento => evento.hora_id);\r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n\r\n            const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId));\r\n            resultado.forEach(li => li.classList.remove('horas__hora--deshabilitada'));\r\n\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n            horasDisponibles.forEach(hora => hora.addEventListener('click', seleccionarHora));\r\n        }\r\n\r\n        function seleccionarHora(e) {\r\n            // Desabilitar la hora previa, si hay un nuevo click\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n\r\n            // Agregar clase de selccionado\r\n            e.target.classList.add('horas__hora--seleccionada')\r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n\r\n            // LLenar el campo oculto del dia\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n        }\r\n    }\r\n\r\n})();","(function () {\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n\r\n    if (ponentesInput) {\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        const listadoPonentes = document.querySelector('#listado-ponentes');\r\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]');\r\n\r\n        obtenerPonentes();\r\n\r\n        ponentesInput.addEventListener('input', buscarPonentes);\r\n\r\n        async function obtenerPonentes() {\r\n            const url = `/api/ponentes`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n\r\n            formatearPonentes(resultado);\r\n        }\r\n\r\n        function formatearPonentes(arrayPonentes) {\r\n            ponentes = arrayPonentes.map(ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id\r\n                }\r\n            });        \r\n        }\r\n\r\n        function buscarPonentes(e) {\r\n            \r\n            const busqueda = eliminarTildes(e.target.value.toLowerCase());\r\n\r\n            if (busqueda.length > 3) {\r\n                \r\n                ponentesFiltrados = ponentes.filter(ponente => {\r\n                    const nombreSinTildes = eliminarTildes(ponente.nombre.toLowerCase());\r\n                    return nombreSinTildes.includes(busqueda);\r\n                });\r\n\r\n            } else {\r\n                ponentesFiltrados = [];\r\n            }\r\n\r\n            mostrarPonentes();\r\n        }\r\n\r\n        function eliminarTildes(texto) {\r\n            return texto.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n        }\r\n\r\n        function mostrarPonentes() {\r\n\r\n            while (listadoPonentes.firstChild) {\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild);\r\n            }\r\n\r\n            if (ponentesFiltrados.length > 0) {\r\n                ponentesFiltrados.forEach(ponente => {\r\n                    const ponenteHTML = document.createElement('LI');\r\n                    ponenteHTML.classList.add('listado-ponentes__ponente');\r\n                    ponenteHTML.textContent = ponente.nombre;\r\n                    ponenteHTML.dataset.ponenteId = ponente.id;\r\n                    ponenteHTML.onclick = seleccionarPonente;\r\n    \r\n                    // Agregar al DOM\r\n                    listadoPonentes.appendChild(ponenteHTML);\r\n                });\r\n            } else {\r\n                const noResultado = document.createElement('P');\r\n                noResultado.classList.add('listado-ponentes__no-resultado');\r\n                noResultado.textContent = \"No hay resultados para mostrar\";\r\n\r\n                listadoPonentes.appendChild(noResultado);\r\n            }\r\n\r\n        }\r\n\r\n        function seleccionarPonente(e) {\r\n            const ponente = e.target;\r\n\r\n            // remover la clase previa\r\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado');\r\n            if (ponentePrevio) {\r\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado');\r\n            }\r\n\r\n            ponente.classList.add('listado-ponentes__ponente--seleccionado');\r\n\r\n            ponenteHidden.value = ponente.dataset.ponenteId;\r\n        }\r\n    }\r\n})();","(function () {\r\n    const tagsInput = document.querySelector('#tags_input');\r\n\r\n    if (tagsInput) {\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n        let tags = [];\r\n\r\n        // Recuperar del input oculto\r\n        if (tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n        // Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress', guardarTag);\r\n\r\n        function guardarTag(e) {\r\n            if (e.keyCode === 44) {\r\n                if (e.target.value.trim() === '' || e.target.value < 1) return;\r\n                e.preventDefault();\r\n\r\n                tags = [...tags, e.target.value.trim()];\r\n                tagsInput.value = '';\r\n\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag\r\n                tagsDiv.appendChild(etiqueta);\r\n            });\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden() {\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n\r\n        function eliminarTag(e) {\r\n            e.target.remove();\r\n\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            actualizarInputHidden();\r\n        }\r\n    }\r\n})();"]}